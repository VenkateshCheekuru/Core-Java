Q.Create Employee management system with Three following functionalities:
           1.Adding Employee
           2.List All the Employees
           3.Find the Employee using EmpID and throw exception if employee is not present.


package com.bean;

public class Employee {

	
	int empId;
	String name;
	String designation;
	double salary;
	public int getEmpId() {
		return empId;
	}
	public void setEmpId(int empId) {
		this.empId = empId;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getDesignation() {
		return designation;
	}
	public void setDesignation(String designation) {
		this.designation = designation;
	}
	public double getSalary() {
		return salary;
	}
	public void setSalary(double salary) {
		this.salary = salary;
	}
	public Employee(int i, String name, String designation, double salary) {
		super();
		this.empId = i;
		this.name = name;
		this.designation = designation;
		this.salary = salary;
	}
	public Employee() {
		super();
	}
	@Override
	public String toString() {
		return "Employee [empId=" + empId + ", name=" + name + ", designation=" + designation + ", salary=" + salary
				+ "]";
	}
	
	
}




package com.exception;

public class EmployeeNotFound extends Exception{
	
	public EmployeeNotFound(String message)
	{
		super(message);
	}

}



package com.service;

import com.bean.Employee;
import com.exception.EmployeeNotFound;

public class EmployeeManagementSystem {

	Employee[] emp = new Employee[10];

	public Employee[] getEmp() {
		return emp;
	}

	public void setEmp(Employee[] emp) {
		this.emp = emp;
	}

	public boolean addEmployee(Employee e) {
		boolean exist = false;
		for (int i = 0; i < emp.length; i++) {
			if (emp[i] != null) {
				if (emp[i].getEmpId() == (e.getEmpId()))
					exist = true;
				break;
			}

		}
		for (int i = 0; i < emp.length; i++) {

			if (exist == false) {
				if (emp[i] == null) {
					emp[i] = e;
					return true;
				}
			}
		}

		return false;
	}

	public void listEmployees() {
		for (int i = 0; i < emp.length; i++) {
			if (emp[i] != null)
				System.out.println(emp[i]);
		}

	}

	public Employee findEmployee(int empId) throws EmployeeNotFound {
		Employee e = null;
		for (int i = 0; i < emp.length; i++) {
			if (emp[i] != null) {
				if (emp[i].getEmpId() == empId) {
					e = emp[i];
					System.out.println("Employee Existed");
					break;
				}

			}

		}
		if (e == null) {
			throw new EmployeeNotFound("Employee not exists");
		}

		return e;
	}
}



package com.test;

import com.bean.Employee;
import com.exception.EmployeeNotFound;
import com.service.EmployeeManagementSystem;

public class EmployeeTester {

	public static void main(String[] args) {
		EmployeeManagementSystem emp = new EmployeeManagementSystem();

		Employee e1 = new Employee(1, "Faran", "ASE", 5000.0);
		Employee e2 = new Employee(2, "Sana", "TE", 75000.0);
		Employee e3 = new Employee(3, "Raftar", "co", 1000000.0);

		System.out.println(emp.addEmployee(e1));
		System.out.println(emp.addEmployee(e2));
		System.out.println(emp.addEmployee(e3));

		emp.listEmployees();

		try {
			emp.findEmployee(3);
		} catch (EmployeeNotFound e) {
			System.out.println(e.getMessage());
		}
	}
}
